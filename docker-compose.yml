version: "3.9"

services:

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./redisdata:/data
  backend:
    build:
      context: .
      dockerfile: ./dockerfiles/development/django/Dockerfile
    container_name: backend
    restart: always
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - ./core:/app
    env_file:
      - envs/development/django/.env
    depends_on:
      - redis
  
  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      - '143:143'
    volumes:
        - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev
  worker-celery:
    build:
      context: .
      dockerfile: ./dockerfiles/development/django/Dockerfile
    command: celery -A core worker --loglevel=info  --concurrency=1
    container_name: celery-worker
    restart: always
    depends_on:
      - redis
      - backend
    volumes:
     - ./core:/app

  worker-celery-beat:
    build:
      context: .
      dockerfile: ./dockerfiles/development/django/Dockerfile
    command: celery -A core worker --loglevel=info  --concurrency=1 && celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    container_name: celery-beat-worker
    restart: always
    depends_on:
      - redis
      - backend
    volumes:
     - ./core:/app
volumes:
  smtp4dev-data: